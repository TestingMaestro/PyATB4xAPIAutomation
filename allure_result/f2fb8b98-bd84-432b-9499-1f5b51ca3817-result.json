{"name": "Test GET Request - Create a Booking", "status": "failed", "statusDetails": {"message": "AssertionError: assert 1012 == int", "trace": "@allure.title(\"Test GET Request - Create a Booking\")\n    @allure.description(\n        \"TC #6 - Verify that via POST request booking should be created successfully and response should be 201\")\n    @allure.tag(\"Smoke\", \"P0\", \"Valid Test\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.label(\"owner\", \"Yashodhar Karki\")\n    @allure.testcase(\"TC#7\")\n    @pytest.mark.smoke\n    def test_create_booking():\n        base_url = \"https://restful-booker.herokuapp.com/booking\"\n        request_headers = {\"Content-Type\": \"application/json\"}\n        request_body = {\n            \"firstname\": \"Yashodhar \",\n            \"lastname\": \"A Karki\",\n            \"totalprice\": 300,\n            \"depositpaid\": True,\n            \"bookingdates\":\n                {\n                    \"checkin\": \"2018-01-01\",\n                    \"checkout\": \"2019-01-01\"\n                },\n            \"additionalneeds\": \"Breakfast\"\n    \n        }\n        response_data = requests.post(url=base_url, headers=request_headers, json=request_body)\n        print(response_data.json())\n        booking_id = response_data.json()[\"bookingid\"]\n        print(booking_id)\n        firstname = response_data.json()[\"booking\"][\"firstname\"]\n        print(firstname)\n        lastname = response_data.json()[\"booking\"][\"lastname\"]\n        print(lastname)\n        totalprice = response_data.json()[\"booking\"][\"totalprice\"]\n        print(totalprice)\n        deposit_paid = response_data.json()[\"booking\"][\"depositpaid\"]\n        print(deposit_paid)\n        checkin_dates = response_data.json()[\"booking\"][\"bookingdates\"][\"checkin\"]\n        print(checkin_dates)\n        checkout_dates = response_data.json()[\"booking\"][\"bookingdates\"][\"checkout\"]\n        print(checkout_dates)\n        needs = response_data.json()[\"booking\"][\"additionalneeds\"]\n        print(needs)\n    \n        assert response_data.status_code == 200\n>       assert booking_id == int\nE       assert 1012 == int\n\nsrc\\api_automation\\testcases_projet#1_restful_booker\\test_invalid_and_valid_booking_id.py:150: AssertionError"}, "description": "TC #6 - Verify that via POST request booking should be created successfully and response should be 201", "start": 1728537754348, "stop": 1728537755385, "uuid": "fe5c72ec-a6c5-416b-8ab1-727ef32138b7", "historyId": "c711890d981d8a940238fb8f02dca8c9", "testCaseId": "c711890d981d8a940238fb8f02dca8c9", "fullName": "src.api_automation.testcases_projet#1_restful_booker.test_invalid_and_valid_booking_id#test_create_booking", "labels": [{"name": "owner", "value": "Yashodhar Karki"}, {"name": "severity", "value": "critical"}, {"name": "tag", "value": "Valid Test"}, {"name": "tag", "value": "Smoke"}, {"name": "tag", "value": "P0"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "src.api_automation.testcases_projet#1_restful_booker"}, {"name": "suite", "value": "test_invalid_and_valid_booking_id"}, {"name": "host", "value": "YASHODHAR_KARKI"}, {"name": "thread", "value": "24204-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.api_automation.testcases_projet#1_restful_booker.test_invalid_and_valid_booking_id"}], "links": [{"type": "tms", "url": "TC#7", "name": "TC#7"}]}